<project xmlns:ivy="antlib:org.apache.ivy.ant" name="MCVSimpleProject" default="compile" basedir=".">
	<description>
		simple Project
	</description>

        <property file="build.properties" />

	<!-- Create folders -->
	<target name="init">
		<mkdir dir="${src.dir}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${tests.classes.dir}" />
	</target>

	<target name="compile" depends="init" description="compile source code">
		<mkdir dir="${classes.dir}" />
                <javac destdir="${classes.dir}" debug="true"  includeantruntime="false">
                    <src path="${src.dir}" />
		</javac>
                <javac destdir="${tests.classes.dir}" debug="true"  includeantruntime="false">
                    <src path="${tests.src.dir}" />
		</javac>
	</target>



<target name="junit" depends="compile">

  <junit printsummary="yes" haltonfailure="no">

	<!--
		<classpath location="lib/hamcrest-core-1.3.jar" />
	-->
	<classpath location="../MVCSimpleProject/lib/junit-4.7.jar" />

	<formatter type="xml" />
	<formatter type="plain" />

	<batchtest fork="yes" todir="report">
		<fileset dir="${tests.src.dir}">
			<include name="**/*Test*.java" />
		</fileset>
	</batchtest>

  </junit>
</target>

</project>

	<!-- <property name="jdk.version" value="1.7" /> -->
	<!-- <property name="projectName" value="MVCSimpleProject" /> -->
	<!-- <property name="src.dir" location="src/main/java" /> -->
	<!-- <property name="tests.src.dir" location="src/test/java" /> -->
	<!-- <property name="resources.dir" location="src/main/resources" /> -->
	<!-- <property name="web.dir" value="src/main/webapp" /> -->
	<!-- <property name="web.classes.dir" location="${web.dir}/WEB-INF/classes" /> -->
	<!-- <property name="tests.classes.dir" location="target/tests/classes" /> -->
	<!-- <property name="target.dir" location="target" /> -->
	<!-- <property name="target.temp.dir" location="target/temp" /> -->
	<!-- <property name="lib.dir" value="${web.dir}/WEB-INF/lib" /> -->

	<!-- <target name="resolve" description="retrieve dependencies with ivy"> -->
	<!-- 	<echo message="Getting dependencies..." /> -->
	<!-- 	<ivy:retrieve /> -->

	<!-- 	<ivy:cachepath pathid="compile.path" conf="compile" /> -->
	<!-- 	<ivy:cachepath pathid="runtime.path" conf="runtime" /> -->
	<!-- 	<ivy:cachepath pathid="test.path" conf="test" /> -->

	<!-- </target> -->

	<!-- <target name="compile" depends="init, resolve" description="compile source code"> -->
	<!-- 	<mkdir dir="${web.classes.dir}" /> -->
	<!-- 	<mkdir dir="${tests.classes.dir}" /> -->
	<!-- 	<javac destdir="${web.classes.dir}" source="${jdk.version}" target="${jdk.version}" debug="true" includeantruntime="false" classpathref="compile.path"> -->
	<!-- 		<src path="${src.dir}" /> -->
	<!-- 	</javac> -->
	<!-- 	<javac destdir="${tests.classes.dir}" source="${jdk.version}" target="${jdk.version}" debug="true" includeantruntime="false"> -->
	<!-- 		<src path="${tests.src.dir}" /> -->
	<!-- 		<classpath> -->
	<!-- 		    <path location="${src.dir}" /> -->
	<!-- 		</classpath> -->
	<!-- 	</javac> -->
	<!-- </target> -->

	<!-- <target name="copy-resources" description="copy Java resources like xml and properties files"> -->
	<!-- 	<copy todir="${web.classes.dir}"> -->
	<!-- 		<fileset dir="${resources.dir}"> -->
	<!-- 			<include name="**/*.xml" /> -->
	<!-- 			<include name="**/*.properties" /> -->
	<!-- 		</fileset> -->
	<!-- 	</copy> -->
	<!-- </target> -->

	<!-- <target name="test" depends="compile"> -->
	<!--     <junit printsummary="on" haltonfailure="yes" fork="true"> -->
	<!--         <classpath> -->
	<!--             <fileset dir="${lib.dir}" includes="**/*.jar" /> -->
	<!-- 			<pathelement location="${tests.classes.dir}" /> -->
	<!--             <pathelement location="${web.classes.dir}" /> -->
	<!--         </classpath> -->
	<!--         <formatter type="brief" usefile="false" /> -->
	<!--         <batchtest> -->
	<!--             <fileset dir="${tests.src.dir}" includes="**/*Test.java" /> -->
	<!--         </batchtest> -->
	<!--     </junit> -->
	<!-- </target> -->

	<!-- <target name="package" depends="clean, compile, copy-resources" description="create a war file"> -->
	<!-- 	<ivy:retrieve pattern="${lib.dir}/[artifact]-[revision].[ext]" conf="runtime" /> -->

	<!-- 	<war destfile="${target.dir}/springmvcproject.war" webxml="${web.dir}/WEB-INF/web.xml"> -->
	<!-- 		<webinf dir="${web.dir}/WEB-INF" /> -->
	<!-- 		<lib dir="${lib.dir}" /> -->
	<!-- 		<zipfileset dir="${resources.dir}" prefix="resources" /> -->
	<!-- 	</war> -->
	<!-- </target> -->


	<!-- <target name="clean" description="clean up"> -->
	<!-- 	<delete dir="${web.classes.dir}" /> -->
	<!-- 	<delete dir="${target.dir}" /> -->
	<!-- 	<delete dir="${lib.dir}" /> -->
	<!-- </target> -->

	<!-- <target name="main" depends="package" /> -->

